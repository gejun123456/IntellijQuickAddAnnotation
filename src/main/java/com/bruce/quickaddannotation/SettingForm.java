package com.bruce.quickaddannotation;

import com.google.common.collect.Lists;
import com.intellij.openapi.project.Project;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.intellij.util.FileContentUtil;
import com.intellij.util.ObjectUtils;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.util.List;

/**
 * @author bruce ge 2020/9/23
 */
public class SettingForm {
    public JPanel annotationPanel;
    public JPanel thePanel;

    public SettingForm(PluginState state) {
        $$$setupUI$$$();
        importFrom(state);
    }

    private void importFrom(PluginState state) {
        MyAddDeleteListPanel myAddDeleteListPanel = ObjectUtils.tryCast(this.annotationPanel, MyAddDeleteListPanel.class);
        myAddDeleteListPanel.resetFrom(state.getAnnotationNames());
    }


    public void reset(PluginState state) {
        importFrom(state);
    }


    public List<String> getState() {
        MyAddDeleteListPanel myAddDeleteListPanel = ObjectUtils.tryCast(this.annotationPanel, MyAddDeleteListPanel.class);
        List<String> propretyList = myAddDeleteListPanel.getValues();
        return propretyList;
    }


    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        thePanel = new JPanel();
        thePanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        thePanel.add(annotationPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        annotationPanel.setBorder(BorderFactory.createTitledBorder(null, "annotationNames", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final Spacer spacer1 = new Spacer();
        thePanel.add(spacer1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return thePanel;
    }


    public void applySetting(PluginState state) {
        MyAddDeleteListPanel myAddDeleteListPanel = ObjectUtils.tryCast(this.annotationPanel, MyAddDeleteListPanel.class);
        List<String> propretyList = myAddDeleteListPanel.getValues();
        state.setAnnotationNames(propretyList);
    }


    private void createUIComponents() {
        // TODO: place custom component creation code here
        annotationPanel = new MyAddDeleteListPanel("Quick Add Annotation form", Lists.newArrayList(), Lists.newArrayList());
    }
}
